{"version":3,"sources":["components/TodoItem.js","components/Todos.js","components/layout/header.js","components/AddTodo.js","components/pages/About.js","App.js","serviceWorker.js","index.js"],"names":["TodoItem","getStyle","background","padding","borderBottom","textDecoration","props","todo","completed","this","id","title","style","type","checked","onChange","toogleComplete","bind","btnStyle","onClick","delTodo","Component","color","border","borderRadius","cursor","float","Todos","todos","map","key","React","Header","headerStyle","to","textAlign","AddTodo","state","handleInputChange","e","setState","target","value","submitTodo","preventDefault","addTodo","display","onSubmit","name","flex","placeholder","className","About","Fragment","App","uuid","v4","filter","newTodo","exact","path","render","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9a63d9a4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class TodoItem extends Component {\r\n  getStyle = () => {\r\n    return {\r\n      background: \"#f4f4f4\",\r\n      padding: \"10px\",\r\n      borderBottom: \"1px solid #ccc\",\r\n      textDecoration: this.props.todo.completed ? \"line-through\" : \"none\"\r\n    };\r\n  };\r\n\r\n  render() {\r\n    const { id, title, completed } = this.props.todo;\r\n    return (\r\n      <div style={this.getStyle()}>\r\n        <p>\r\n           <input\r\n            type=\"checkbox\"\r\n            checked={completed}\r\n            onChange={this.props.toogleComplete.bind(this, id)}\r\n          />{\" \"}\r\n          {title}\r\n          <button style={btnStyle} onClick={this.props.delTodo.bind(this, id)}>\r\n            X\r\n          </button>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// PropTypes\r\nTodoItem.propTypes = {\r\n  todo: PropTypes.object.isRequired,\r\n  toogleComplete: PropTypes.func.isRequired,\r\n  delTodo: PropTypes.func.isRequired\r\n};\r\n\r\nconst btnStyle = {\r\n  background: \"#f44336\",\r\n  color: \"#fff\",\r\n  border: \"none\",\r\n  padding: \"5px 8px\",\r\n  borderRadius: \"50%\",\r\n  cursor: \"pointer\",\r\n  float: \"right\"\r\n};\r\n\r\nexport default TodoItem;\r\n","import React from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Todos extends React.Component {\r\n  render() {\r\n    return this.props.todos.map(todo => {\r\n      return (\r\n        <TodoItem\r\n          key={todo.id}\r\n          todo={todo}\r\n          toogleComplete={this.props.toogleComplete}\r\n          delTodo={this.props.delTodo}\r\n        />\r\n      );\r\n    });\r\n  }\r\n}\r\n\r\n// PropTypes\r\nTodos.propTypes = {\r\n  todos: PropTypes.array.isRequired,\r\n  toogleComplete: PropTypes.func.isRequired,\r\n  delTodo: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Todos;\r\n","import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Header() {\r\n  return (\r\n    <header style={headerStyle}>\r\n      <h1>TodoList</h1>\r\n      <Link to=\"/\">Home</Link> | <Link to=\"/about\">About</Link>\r\n    </header>\r\n  );\r\n}\r\n\r\nconst headerStyle = {\r\n  background: \"#333\",\r\n  color: \"#fff\",\r\n  textAlign: \"center\",\r\n  padding: \"10px\"\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class AddTodo extends Component {\r\n\r\n  state = {\r\n    title: ''\r\n  }\r\n\r\n  handleInputChange = (e) => this.setState({ title: e.target.value });\r\n\r\n  submitTodo = (e) => {\r\n    e.preventDefault();\r\n    this.props.addTodo(this.state.title);\r\n    this.setState({ title: '' });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form style={{ display: \"flex\" }} onSubmit={this.submitTodo}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          style={{ flex: \"10\", padding: \"5px\" }}\r\n          placeholder=\"Add Todo\"\r\n          value={this.state.title}\r\n          onChange={this.handleInputChange}\r\n        ></input>\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Submit\"\r\n          className=\"btn\"\r\n          style={{ flex: \"1\" }}\r\n        ></input>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nAddTodo.propTypes = {\r\n  addTodo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddTodo;\r\n","import React from 'react'\r\n\r\nexport default function About() {\r\n  return (\r\n    <React.Fragment>\r\n      <h1>About</h1>\r\n      <p>This is the TodoList app v1.0.0. It is part of a React crash course.</p>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Todos from \"./components/Todos\";\nimport Header from \"./components/layout/header\";\nimport AddTodo from \"./components/AddTodo\";\nimport About from \"./components/pages/About\";\nimport uuid from \"uuid\";\n\nclass App extends React.Component {\n  state = {\n    todos: [\n      {\n        id: uuid.v4(),\n        title: 'Make martian beer',\n        completed: false\n      },\n      {\n        id: uuid.v4(),\n        title: 'Do a barrel roll',\n        completed: false\n      },\n      {\n        id: uuid.v4(),\n        title: 'Find Atlantis',\n        completed: false\n      }\n    ]\n  };\n\n  toogleComplete = id => {\n    this.setState({\n      todos: this.state.todos.map(todo => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed; // Toogle\n        }\n        return todo;\n      })\n    });\n  };\n\n  delTodo = id => {\n    this.setState({\n      todos: [...this.state.todos.filter(todo => todo.id !== id)]\n    });\n  };\n\n  addTodo = title => {\n    const newTodo = {\n      id: uuid.v4(),\n      title, // In ES6, this is allowed since the key and the value have the same name.\n      completed: false\n    };\n    this.setState({ todos: [...this.state.todos, newTodo] });\n  };\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Header />\n          <Route\n            exact\n            path=\"/\"\n            render={props => {\n              return (\n                <div className=\"container\">\n                  <Todos\n                    todos={this.state.todos}\n                    toogleComplete={this.toogleComplete}\n                    delTodo={this.delTodo}\n                  />\n                  <AddTodo addTodo={this.addTodo} />\n                </div>\n              );\n            }}\n          />\n          <Route path=\"/about\" component={About} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nserviceWorker.register(); // Progressive?"],"sourceRoot":""}